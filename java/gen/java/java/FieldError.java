// Code generated by gobind. DO NOT EDIT.

// Java class java.FieldError is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/moov-io/ach/java
package java;

import go.Seq;

public final class FieldError implements Seq.Proxy {
	static { Java.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	FieldError(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public FieldError() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	public final native String getFieldName();
	public final native void setFieldName(String v);
	
	// skipped field FieldError.Value with unsupported type: interface{}
	
	public final native java.lang.Exception getErr();
	public final native void setErr(java.lang.Exception v);
	
	public final native String getMsg();
	public final native void setMsg(String v);
	
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof FieldError)) {
		    return false;
		}
		FieldError that = (FieldError)o;
		String thisFieldName = getFieldName();
		String thatFieldName = that.getFieldName();
		if (thisFieldName == null) {
			if (thatFieldName != null) {
			    return false;
			}
		} else if (!thisFieldName.equals(thatFieldName)) {
		    return false;
		}
		// skipped field FieldError.Value with unsupported type: interface{}
		
		java.lang.Exception thisErr = getErr();
		java.lang.Exception thatErr = that.getErr();
		if (thisErr == null) {
			if (thatErr != null) {
			    return false;
			}
		} else if (!thisErr.equals(thatErr)) {
		    return false;
		}
		String thisMsg = getMsg();
		String thatMsg = that.getMsg();
		if (thisMsg == null) {
			if (thatMsg != null) {
			    return false;
			}
		} else if (!thisMsg.equals(thatMsg)) {
		    return false;
		}
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {getFieldName(), getErr(), getMsg()});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("FieldError").append("{");
		b.append("FieldName:").append(getFieldName()).append(",");
		b.append("Err:").append(getErr()).append(",");
		b.append("Msg:").append(getMsg()).append(",");
		return b.append("}").toString();
	}
}


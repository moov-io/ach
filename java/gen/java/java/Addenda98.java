// Code generated by gobind. DO NOT EDIT.

// Java class java.Addenda98 is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/moov-io/ach/java
package java;

import go.Seq;

public final class Addenda98 implements Seq.Proxy {
	static { Java.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	Addenda98(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public Addenda98() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	public final native String getID();
	public final native void setID(String v);
	
	public final native String getTypeCode();
	public final native void setTypeCode(String v);
	
	public final native String getChangeCode();
	public final native void setChangeCode(String v);
	
	public final native String getOriginalTrace();
	public final native void setOriginalTrace(String v);
	
	public final native String getOriginalDFI();
	public final native void setOriginalDFI(String v);
	
	public final native String getCorrectedData();
	public final native void setCorrectedData(String v);
	
	public final native String getTraceNumber();
	public final native void setTraceNumber(String v);
	
	public native long calculateCheckDigit(String routingNumber);
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof Addenda98)) {
		    return false;
		}
		Addenda98 that = (Addenda98)o;
		String thisID = getID();
		String thatID = that.getID();
		if (thisID == null) {
			if (thatID != null) {
			    return false;
			}
		} else if (!thisID.equals(thatID)) {
		    return false;
		}
		String thisTypeCode = getTypeCode();
		String thatTypeCode = that.getTypeCode();
		if (thisTypeCode == null) {
			if (thatTypeCode != null) {
			    return false;
			}
		} else if (!thisTypeCode.equals(thatTypeCode)) {
		    return false;
		}
		String thisChangeCode = getChangeCode();
		String thatChangeCode = that.getChangeCode();
		if (thisChangeCode == null) {
			if (thatChangeCode != null) {
			    return false;
			}
		} else if (!thisChangeCode.equals(thatChangeCode)) {
		    return false;
		}
		String thisOriginalTrace = getOriginalTrace();
		String thatOriginalTrace = that.getOriginalTrace();
		if (thisOriginalTrace == null) {
			if (thatOriginalTrace != null) {
			    return false;
			}
		} else if (!thisOriginalTrace.equals(thatOriginalTrace)) {
		    return false;
		}
		String thisOriginalDFI = getOriginalDFI();
		String thatOriginalDFI = that.getOriginalDFI();
		if (thisOriginalDFI == null) {
			if (thatOriginalDFI != null) {
			    return false;
			}
		} else if (!thisOriginalDFI.equals(thatOriginalDFI)) {
		    return false;
		}
		String thisCorrectedData = getCorrectedData();
		String thatCorrectedData = that.getCorrectedData();
		if (thisCorrectedData == null) {
			if (thatCorrectedData != null) {
			    return false;
			}
		} else if (!thisCorrectedData.equals(thatCorrectedData)) {
		    return false;
		}
		String thisTraceNumber = getTraceNumber();
		String thatTraceNumber = that.getTraceNumber();
		if (thisTraceNumber == null) {
			if (thatTraceNumber != null) {
			    return false;
			}
		} else if (!thisTraceNumber.equals(thatTraceNumber)) {
		    return false;
		}
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {getID(), getTypeCode(), getChangeCode(), getOriginalTrace(), getOriginalDFI(), getCorrectedData(), getTraceNumber()});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("Addenda98").append("{");
		b.append("ID:").append(getID()).append(",");
		b.append("TypeCode:").append(getTypeCode()).append(",");
		b.append("ChangeCode:").append(getChangeCode()).append(",");
		b.append("OriginalTrace:").append(getOriginalTrace()).append(",");
		b.append("OriginalDFI:").append(getOriginalDFI()).append(",");
		b.append("CorrectedData:").append(getCorrectedData()).append(",");
		b.append("TraceNumber:").append(getTraceNumber()).append(",");
		return b.append("}").toString();
	}
}


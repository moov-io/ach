// Code generated by gobind. DO NOT EDIT.

// Java class java.EntryDetail is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/moov-io/ach/java
package java;

import go.Seq;

public final class EntryDetail implements Seq.Proxy {
	static { Java.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	EntryDetail(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public EntryDetail() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	public final native String getID();
	public final native void setID(String v);
	
	public final native long getTransactionCode();
	public final native void setTransactionCode(long v);
	
	public final native String getRDFIIdentification();
	public final native void setRDFIIdentification(String v);
	
	public final native String getCheckDigit();
	public final native void setCheckDigit(String v);
	
	public final native String getDFIAccountNumber();
	public final native void setDFIAccountNumber(String v);
	
	public final native long getAmount();
	public final native void setAmount(long v);
	
	public final native String getIdentificationNumber();
	public final native void setIdentificationNumber(String v);
	
	public final native String getIndividualName();
	public final native void setIndividualName(String v);
	
	public final native String getDiscretionaryData();
	public final native void setDiscretionaryData(String v);
	
	public final native long getAddendaRecordIndicator();
	public final native void setAddendaRecordIndicator(long v);
	
	public final native String getTraceNumber();
	public final native void setTraceNumber(String v);
	
	// skipped field EntryDetail.Addenda02 with unsupported type: *github.com/moov-io/ach.Addenda02
	
	// skipped field EntryDetail.Addenda05 with unsupported type: []*github.com/moov-io/ach.Addenda05
	
	// skipped field EntryDetail.Addenda98 with unsupported type: *github.com/moov-io/ach.Addenda98
	
	// skipped field EntryDetail.Addenda98Refused with unsupported type: *github.com/moov-io/ach.Addenda98Refused
	
	// skipped field EntryDetail.Addenda99 with unsupported type: *github.com/moov-io/ach.Addenda99
	
	// skipped field EntryDetail.Addenda99Contested with unsupported type: *github.com/moov-io/ach.Addenda99Contested
	
	// skipped field EntryDetail.Addenda99Dishonored with unsupported type: *github.com/moov-io/ach.Addenda99Dishonored
	
	public final native String getCategory();
	public final native void setCategory(String v);
	
	public native long calculateCheckDigit(String routingNumber);
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof EntryDetail)) {
		    return false;
		}
		EntryDetail that = (EntryDetail)o;
		String thisID = getID();
		String thatID = that.getID();
		if (thisID == null) {
			if (thatID != null) {
			    return false;
			}
		} else if (!thisID.equals(thatID)) {
		    return false;
		}
		long thisTransactionCode = getTransactionCode();
		long thatTransactionCode = that.getTransactionCode();
		if (thisTransactionCode != thatTransactionCode) {
		    return false;
		}
		String thisRDFIIdentification = getRDFIIdentification();
		String thatRDFIIdentification = that.getRDFIIdentification();
		if (thisRDFIIdentification == null) {
			if (thatRDFIIdentification != null) {
			    return false;
			}
		} else if (!thisRDFIIdentification.equals(thatRDFIIdentification)) {
		    return false;
		}
		String thisCheckDigit = getCheckDigit();
		String thatCheckDigit = that.getCheckDigit();
		if (thisCheckDigit == null) {
			if (thatCheckDigit != null) {
			    return false;
			}
		} else if (!thisCheckDigit.equals(thatCheckDigit)) {
		    return false;
		}
		String thisDFIAccountNumber = getDFIAccountNumber();
		String thatDFIAccountNumber = that.getDFIAccountNumber();
		if (thisDFIAccountNumber == null) {
			if (thatDFIAccountNumber != null) {
			    return false;
			}
		} else if (!thisDFIAccountNumber.equals(thatDFIAccountNumber)) {
		    return false;
		}
		long thisAmount = getAmount();
		long thatAmount = that.getAmount();
		if (thisAmount != thatAmount) {
		    return false;
		}
		String thisIdentificationNumber = getIdentificationNumber();
		String thatIdentificationNumber = that.getIdentificationNumber();
		if (thisIdentificationNumber == null) {
			if (thatIdentificationNumber != null) {
			    return false;
			}
		} else if (!thisIdentificationNumber.equals(thatIdentificationNumber)) {
		    return false;
		}
		String thisIndividualName = getIndividualName();
		String thatIndividualName = that.getIndividualName();
		if (thisIndividualName == null) {
			if (thatIndividualName != null) {
			    return false;
			}
		} else if (!thisIndividualName.equals(thatIndividualName)) {
		    return false;
		}
		String thisDiscretionaryData = getDiscretionaryData();
		String thatDiscretionaryData = that.getDiscretionaryData();
		if (thisDiscretionaryData == null) {
			if (thatDiscretionaryData != null) {
			    return false;
			}
		} else if (!thisDiscretionaryData.equals(thatDiscretionaryData)) {
		    return false;
		}
		long thisAddendaRecordIndicator = getAddendaRecordIndicator();
		long thatAddendaRecordIndicator = that.getAddendaRecordIndicator();
		if (thisAddendaRecordIndicator != thatAddendaRecordIndicator) {
		    return false;
		}
		String thisTraceNumber = getTraceNumber();
		String thatTraceNumber = that.getTraceNumber();
		if (thisTraceNumber == null) {
			if (thatTraceNumber != null) {
			    return false;
			}
		} else if (!thisTraceNumber.equals(thatTraceNumber)) {
		    return false;
		}
		// skipped field EntryDetail.Addenda02 with unsupported type: *github.com/moov-io/ach.Addenda02
		
		// skipped field EntryDetail.Addenda05 with unsupported type: []*github.com/moov-io/ach.Addenda05
		
		// skipped field EntryDetail.Addenda98 with unsupported type: *github.com/moov-io/ach.Addenda98
		
		// skipped field EntryDetail.Addenda98Refused with unsupported type: *github.com/moov-io/ach.Addenda98Refused
		
		// skipped field EntryDetail.Addenda99 with unsupported type: *github.com/moov-io/ach.Addenda99
		
		// skipped field EntryDetail.Addenda99Contested with unsupported type: *github.com/moov-io/ach.Addenda99Contested
		
		// skipped field EntryDetail.Addenda99Dishonored with unsupported type: *github.com/moov-io/ach.Addenda99Dishonored
		
		String thisCategory = getCategory();
		String thatCategory = that.getCategory();
		if (thisCategory == null) {
			if (thatCategory != null) {
			    return false;
			}
		} else if (!thisCategory.equals(thatCategory)) {
		    return false;
		}
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {getID(), getTransactionCode(), getRDFIIdentification(), getCheckDigit(), getDFIAccountNumber(), getAmount(), getIdentificationNumber(), getIndividualName(), getDiscretionaryData(), getAddendaRecordIndicator(), getTraceNumber(), getCategory()});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("EntryDetail").append("{");
		b.append("ID:").append(getID()).append(",");
		b.append("TransactionCode:").append(getTransactionCode()).append(",");
		b.append("RDFIIdentification:").append(getRDFIIdentification()).append(",");
		b.append("CheckDigit:").append(getCheckDigit()).append(",");
		b.append("DFIAccountNumber:").append(getDFIAccountNumber()).append(",");
		b.append("Amount:").append(getAmount()).append(",");
		b.append("IdentificationNumber:").append(getIdentificationNumber()).append(",");
		b.append("IndividualName:").append(getIndividualName()).append(",");
		b.append("DiscretionaryData:").append(getDiscretionaryData()).append(",");
		b.append("AddendaRecordIndicator:").append(getAddendaRecordIndicator()).append(",");
		b.append("TraceNumber:").append(getTraceNumber()).append(",");
		b.append("Category:").append(getCategory()).append(",");
		return b.append("}").toString();
	}
}


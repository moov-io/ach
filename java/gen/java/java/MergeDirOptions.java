// Code generated by gobind. DO NOT EDIT.

// Java class java.MergeDirOptions is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/moov-io/ach/java
package java;

import go.Seq;

public final class MergeDirOptions implements Seq.Proxy {
	static { Java.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	MergeDirOptions(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public MergeDirOptions() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	// skipped field MergeDirOptions.AcceptFile with unsupported type: func(path string) github.com/moov-io/ach.FileAcceptance
	
	// skipped field MergeDirOptions.FS with unsupported type: io/fs.FS
	
	public final native String getValidateOptsExtension();
	public final native void setValidateOptsExtension(String v);
	
	public final native long getParseWorkers();
	public final native void setParseWorkers(long v);
	
	public final native boolean getSubDirectories();
	public final native void setSubDirectories(boolean v);
	
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof MergeDirOptions)) {
		    return false;
		}
		MergeDirOptions that = (MergeDirOptions)o;
		// skipped field MergeDirOptions.AcceptFile with unsupported type: func(path string) github.com/moov-io/ach.FileAcceptance
		
		// skipped field MergeDirOptions.FS with unsupported type: io/fs.FS
		
		String thisValidateOptsExtension = getValidateOptsExtension();
		String thatValidateOptsExtension = that.getValidateOptsExtension();
		if (thisValidateOptsExtension == null) {
			if (thatValidateOptsExtension != null) {
			    return false;
			}
		} else if (!thisValidateOptsExtension.equals(thatValidateOptsExtension)) {
		    return false;
		}
		long thisParseWorkers = getParseWorkers();
		long thatParseWorkers = that.getParseWorkers();
		if (thisParseWorkers != thatParseWorkers) {
		    return false;
		}
		boolean thisSubDirectories = getSubDirectories();
		boolean thatSubDirectories = that.getSubDirectories();
		if (thisSubDirectories != thatSubDirectories) {
		    return false;
		}
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {getValidateOptsExtension(), getParseWorkers(), getSubDirectories()});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("MergeDirOptions").append("{");
		b.append("ValidateOptsExtension:").append(getValidateOptsExtension()).append(",");
		b.append("ParseWorkers:").append(getParseWorkers()).append(",");
		b.append("SubDirectories:").append(getSubDirectories()).append(",");
		return b.append("}").toString();
	}
}


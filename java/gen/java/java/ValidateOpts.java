// Code generated by gobind. DO NOT EDIT.

// Java class java.ValidateOpts is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/moov-io/ach/java
package java;

import go.Seq;

public final class ValidateOpts implements Seq.Proxy {
	static { Java.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	ValidateOpts(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public ValidateOpts() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	public final native boolean getSkipAll();
	public final native void setSkipAll(boolean v);
	
	public final native boolean getRequireABAOrigin();
	public final native void setRequireABAOrigin(boolean v);
	
	public final native boolean getBypassOriginValidation();
	public final native void setBypassOriginValidation(boolean v);
	
	public final native boolean getBypassDestinationValidation();
	public final native void setBypassDestinationValidation(boolean v);
	
	// skipped field ValidateOpts.CheckTransactionCode with unsupported type: func(code int) error
	
	public final native boolean getCustomTraceNumbers();
	public final native void setCustomTraceNumbers(boolean v);
	
	public final native boolean getAllowZeroBatches();
	public final native void setAllowZeroBatches(boolean v);
	
	public final native boolean getAllowMissingFileHeader();
	public final native void setAllowMissingFileHeader(boolean v);
	
	public final native boolean getAllowMissingFileControl();
	public final native void setAllowMissingFileControl(boolean v);
	
	public final native boolean getBypassCompanyIdentificationMatch();
	public final native void setBypassCompanyIdentificationMatch(boolean v);
	
	public final native boolean getCustomReturnCodes();
	public final native void setCustomReturnCodes(boolean v);
	
	public final native boolean getUnequalServiceClassCode();
	public final native void setUnequalServiceClassCode(boolean v);
	
	public final native boolean getAllowUnorderedBatchNumbers();
	public final native void setAllowUnorderedBatchNumbers(boolean v);
	
	public final native boolean getAllowInvalidCheckDigit();
	public final native void setAllowInvalidCheckDigit(boolean v);
	
	public final native boolean getUnequalAddendaCounts();
	public final native void setUnequalAddendaCounts(boolean v);
	
	public final native boolean getPreserveSpaces();
	public final native void setPreserveSpaces(boolean v);
	
	public final native boolean getAllowInvalidAmounts();
	public final native void setAllowInvalidAmounts(boolean v);
	
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof ValidateOpts)) {
		    return false;
		}
		ValidateOpts that = (ValidateOpts)o;
		boolean thisSkipAll = getSkipAll();
		boolean thatSkipAll = that.getSkipAll();
		if (thisSkipAll != thatSkipAll) {
		    return false;
		}
		boolean thisRequireABAOrigin = getRequireABAOrigin();
		boolean thatRequireABAOrigin = that.getRequireABAOrigin();
		if (thisRequireABAOrigin != thatRequireABAOrigin) {
		    return false;
		}
		boolean thisBypassOriginValidation = getBypassOriginValidation();
		boolean thatBypassOriginValidation = that.getBypassOriginValidation();
		if (thisBypassOriginValidation != thatBypassOriginValidation) {
		    return false;
		}
		boolean thisBypassDestinationValidation = getBypassDestinationValidation();
		boolean thatBypassDestinationValidation = that.getBypassDestinationValidation();
		if (thisBypassDestinationValidation != thatBypassDestinationValidation) {
		    return false;
		}
		// skipped field ValidateOpts.CheckTransactionCode with unsupported type: func(code int) error
		
		boolean thisCustomTraceNumbers = getCustomTraceNumbers();
		boolean thatCustomTraceNumbers = that.getCustomTraceNumbers();
		if (thisCustomTraceNumbers != thatCustomTraceNumbers) {
		    return false;
		}
		boolean thisAllowZeroBatches = getAllowZeroBatches();
		boolean thatAllowZeroBatches = that.getAllowZeroBatches();
		if (thisAllowZeroBatches != thatAllowZeroBatches) {
		    return false;
		}
		boolean thisAllowMissingFileHeader = getAllowMissingFileHeader();
		boolean thatAllowMissingFileHeader = that.getAllowMissingFileHeader();
		if (thisAllowMissingFileHeader != thatAllowMissingFileHeader) {
		    return false;
		}
		boolean thisAllowMissingFileControl = getAllowMissingFileControl();
		boolean thatAllowMissingFileControl = that.getAllowMissingFileControl();
		if (thisAllowMissingFileControl != thatAllowMissingFileControl) {
		    return false;
		}
		boolean thisBypassCompanyIdentificationMatch = getBypassCompanyIdentificationMatch();
		boolean thatBypassCompanyIdentificationMatch = that.getBypassCompanyIdentificationMatch();
		if (thisBypassCompanyIdentificationMatch != thatBypassCompanyIdentificationMatch) {
		    return false;
		}
		boolean thisCustomReturnCodes = getCustomReturnCodes();
		boolean thatCustomReturnCodes = that.getCustomReturnCodes();
		if (thisCustomReturnCodes != thatCustomReturnCodes) {
		    return false;
		}
		boolean thisUnequalServiceClassCode = getUnequalServiceClassCode();
		boolean thatUnequalServiceClassCode = that.getUnequalServiceClassCode();
		if (thisUnequalServiceClassCode != thatUnequalServiceClassCode) {
		    return false;
		}
		boolean thisAllowUnorderedBatchNumbers = getAllowUnorderedBatchNumbers();
		boolean thatAllowUnorderedBatchNumbers = that.getAllowUnorderedBatchNumbers();
		if (thisAllowUnorderedBatchNumbers != thatAllowUnorderedBatchNumbers) {
		    return false;
		}
		boolean thisAllowInvalidCheckDigit = getAllowInvalidCheckDigit();
		boolean thatAllowInvalidCheckDigit = that.getAllowInvalidCheckDigit();
		if (thisAllowInvalidCheckDigit != thatAllowInvalidCheckDigit) {
		    return false;
		}
		boolean thisUnequalAddendaCounts = getUnequalAddendaCounts();
		boolean thatUnequalAddendaCounts = that.getUnequalAddendaCounts();
		if (thisUnequalAddendaCounts != thatUnequalAddendaCounts) {
		    return false;
		}
		boolean thisPreserveSpaces = getPreserveSpaces();
		boolean thatPreserveSpaces = that.getPreserveSpaces();
		if (thisPreserveSpaces != thatPreserveSpaces) {
		    return false;
		}
		boolean thisAllowInvalidAmounts = getAllowInvalidAmounts();
		boolean thatAllowInvalidAmounts = that.getAllowInvalidAmounts();
		if (thisAllowInvalidAmounts != thatAllowInvalidAmounts) {
		    return false;
		}
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {getSkipAll(), getRequireABAOrigin(), getBypassOriginValidation(), getBypassDestinationValidation(), getCustomTraceNumbers(), getAllowZeroBatches(), getAllowMissingFileHeader(), getAllowMissingFileControl(), getBypassCompanyIdentificationMatch(), getCustomReturnCodes(), getUnequalServiceClassCode(), getAllowUnorderedBatchNumbers(), getAllowInvalidCheckDigit(), getUnequalAddendaCounts(), getPreserveSpaces(), getAllowInvalidAmounts()});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("ValidateOpts").append("{");
		b.append("SkipAll:").append(getSkipAll()).append(",");
		b.append("RequireABAOrigin:").append(getRequireABAOrigin()).append(",");
		b.append("BypassOriginValidation:").append(getBypassOriginValidation()).append(",");
		b.append("BypassDestinationValidation:").append(getBypassDestinationValidation()).append(",");
		b.append("CustomTraceNumbers:").append(getCustomTraceNumbers()).append(",");
		b.append("AllowZeroBatches:").append(getAllowZeroBatches()).append(",");
		b.append("AllowMissingFileHeader:").append(getAllowMissingFileHeader()).append(",");
		b.append("AllowMissingFileControl:").append(getAllowMissingFileControl()).append(",");
		b.append("BypassCompanyIdentificationMatch:").append(getBypassCompanyIdentificationMatch()).append(",");
		b.append("CustomReturnCodes:").append(getCustomReturnCodes()).append(",");
		b.append("UnequalServiceClassCode:").append(getUnequalServiceClassCode()).append(",");
		b.append("AllowUnorderedBatchNumbers:").append(getAllowUnorderedBatchNumbers()).append(",");
		b.append("AllowInvalidCheckDigit:").append(getAllowInvalidCheckDigit()).append(",");
		b.append("UnequalAddendaCounts:").append(getUnequalAddendaCounts()).append(",");
		b.append("PreserveSpaces:").append(getPreserveSpaces()).append(",");
		b.append("AllowInvalidAmounts:").append(getAllowInvalidAmounts()).append(",");
		return b.append("}").toString();
	}
}

